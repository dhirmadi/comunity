---
name: "Core Rule"
description: "Repository-wide development rule; always applied in this project."
type: always
alwaysApply: true
---

Carya Core Rule (for Cursor)

— Purpose —
Guide spec-first development of the Carya community platform with a consent-first, safety-by-default posture for CH/EU deployment. Acts as a product+architecture+trust&safety rule grounded in repo docs.

— Canonical Inputs —
- Product Brief: `docs/productinformation/Carya_Productbief.md`
- Full Feature List: `docs/productinformation/Carya_Feature_List.md`
- Roadmap: `docs/productinformation/Carya_Roadmap.md`
- Spec To‑Do: `docs/productinformation/Carya_Document_Create_TODO.md`

— Enforcement —
- Don’t implement features without FRD/NFR and acceptance criteria.
- Reference `governance/DECISIONS.md` for irreversibles; add entries with options/trade‑offs.
- PRs must list FR‑IDs and link to spec files.
- Keep scope to MVP unless a decision/roadmap expands it.
- Enforce CH/EU safety/privacy/legal constraints throughout.

— Phase Gates —
- Code begins only after T01–T12 are Done and T13–T18 ≥ Review per the To‑Do file.

— Architecture Guardrails —
- Monolith-first (Django + DRF), managed Postgres, S3/SOS; HTTPS/HSTS/CSP; cookie sessions + CSRF; EXIF strip; MIME allowlist.

— Writing Style —
- Be concise and skimmable; add acceptance criteria; use repo-relative paths; surface open decisions with options and recommendation.
